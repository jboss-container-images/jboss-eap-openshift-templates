{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "iconClass": "icon-eap",
            "tags": "eap,eap-xp,javaee,java,jboss",
            "version": "1.0",
            "openshift.io/display-name": "JBoss EAP XP 1.0 and 3rd party DB driver template",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "description": "Example of a JBoss EAP XP application with a 3rd party database. For more information about using this template, see https://github.com/jboss-container-images/jboss-eap-openshift-templates/blob/eap-xp1/README.adoc",
            "template.openshift.io/long-description": "This template defines resources needed to develop JBoss Enterprise Application Server based application, including a build configuration, application deployment configuration, using third-party DB drivers and secure communication using passthrough TLS.",
            "template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/",
            "template.openshift.io/support-url": "https://access.redhat.com"
        },
        "name": "eap-xp1-third-party-db-s2i"
    },
    "labels": {
        "template": "eap-xp1-third-party-db-s2i",
        "xpaas": "1.0"
    },
    "message": "A new EAP based application with SSL support has been created in your project. Please be sure to create the following secrets:\"${CONFIGURATION_NAME}\" containing the datasource configuration details required by the deployed application(s); \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.",
    "parameters": [
        {
            "displayName": "Application Name",
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "value": "eap-xp1-db-app",
            "required": true
        },
        {
            "displayName": "EAP XP Image Name",
            "description": "EAP XP imagestream tag to use, example: jboss-eap-xp1-openjdk11-openshift:1.0",
            "name": "EAP_IMAGE_NAME",
            "value": "jboss-eap-xp1-openjdk11-openshift:1.0",
            "required": true
        },
        {
            "displayName": "EAP XP Runtime Image Name",
            "description": "EAP XP Runtime imagestream tag to use, example: jboss-eap-xp1-openjdk11-runtime-openshift:1.0",
            "name": "EAP_RUNTIME_IMAGE_NAME",
            "value": "jboss-eap-xp1-openjdk11-runtime-openshift:1.0",
            "required": true
        },
        {
            "displayName": "Configuration Secret Name",
            "description": "The name of the secret containing configuration properties for the datasources.",
            "name": "CONFIGURATION_NAME",
            "value": "eap-app-config",
            "required": true
        },
        {
            "displayName": "Git Repository URL",
            "description": "Git source URI for application",
            "name": "SOURCE_REPOSITORY_URL",
            "value": "https://github.com/jboss-openshift/openshift-quickstarts",
            "required": true
        },
        {
            "displayName": "Git Reference",
            "description": "Git branch/tag reference",
            "name": "SOURCE_REPOSITORY_REF",
            "value": "1.5",
            "required": false
        },
        {
            "displayName": "Context Directory",
            "description": "Path within Git project to build; empty for root project directory.",
            "name": "CONTEXT_DIR",
            "value": "datavirt/hibernate-webapp",
            "required": false
        }, 
        {
            "displayName": "Galleon layers",
            "description": "Comma separated list of Galleon layers to provision a server.",
            "name": "GALLEON_PROVISION_LAYERS",
            "required": false
        },
        {
            "displayName": "Enable ExampleDS datasource",
            "description": "Enable ExampleDS datasource.",
            "name": "ENABLE_GENERATE_DEFAULT_DATASOURCE",
            "value": "false",
            "required": false
        },
        {
            "displayName": "Drivers ImageStreamTag",
            "description": "ImageStreamTag definition for the image containing the drivers and configuration, e.g. jboss-datavirt64-driver-openshift:1.7",
            "name": "EXTENSIONS_IMAGE",
            "value": "jboss-datavirt64-driver-openshift:1.7",
            "required": true
        },
        {
            "displayName": "Drivers ImageStream Namespace",
            "description": "Namespace within which the ImageStream definition for the image containing the drivers and configuration is located.",
            "name": "EXTENSIONS_IMAGE_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "displayName": "Drivers Image Install Directory",
            "description": "Full path to the directory within the extensions image where the extensions are located (e.g. install.sh, modules/, etc.)",
            "name": "EXTENSIONS_INSTALL_DIR",
            "value": "/extensions",
            "required": true
        },
        {
            "displayName": "Queue Names",
            "description": "Queue names, separated by commas. These queues will be automatically created when the broker starts. Also, they will be made accessible as JNDI resources in EAP. Note that all queues used by the application *must* be specified here in order to be created automatically on the remote AMQ broker.",
            "name": "MQ_QUEUES",
            "value": "",
            "required": false
        },
        {
            "displayName": "Topic Names",
            "description": "Topic names, separated by commas. These topics will be automatically created when the broker starts. Also, they will be made accessible as JNDI resources in EAP. Note that all topics used by the application *must* be specified here in order to be created automatically on the remote AMQ broker.",
            "name": "MQ_TOPICS",
            "value": "",
            "required": false
        },
        {
            "displayName": "Messaging Cluster Admin Password",
            "description": "Admin password for Messaging cluster.",
            "name": "MQ_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "Github Webhook Secret",
            "description": "A secret string used to configure the GitHub webhook.",
            "name": "GITHUB_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "Generic Webhook Secret",
            "description": "A secret string used to configure the Generic webhook.",
            "name": "GENERIC_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "ImageStream Namespace",
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "displayName": "JGroups Secret Name",
            "description": "The name of the secret containing the keystore to be used for securing JGroups communications.",
            "name": "JGROUPS_ENCRYPT_SECRET",
            "value": "eap-app-secret",
            "required": false
        },
        {
            "displayName": "JGroups Keystore Filename",
            "description": "The name of the keystore file within the JGroups secret.",
            "name": "JGROUPS_ENCRYPT_KEYSTORE",
            "value": "jgroups.jceks",
            "required": false
        },
        {
            "displayName": "JGroups Certificate Name",
            "description": "The name associated with the JGroups server certificate",
            "name": "JGROUPS_ENCRYPT_NAME",
            "value": "secret-key",
            "required": false
        },
        {
            "displayName": "JGroups Keystore Password",
            "description": "The password for the keystore and certificate",
            "name": "JGROUPS_ENCRYPT_PASSWORD",
            "value": "password",
            "required": false
        },
        {
            "displayName": "JGroups Cluster Password",
            "description": "Password used by JGroups to authenticate nodes in the cluster.",
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "Deploy Exploded Archives",
            "description": "Controls whether exploded deployment content should be automatically deployed",
            "name": "AUTO_DEPLOY_EXPLODED",
            "value": "false",
            "required": false
        },
        {
            "displayName": "Maven mirror URL",
            "description": "Maven mirror to use for S2I builds",
            "name": "MAVEN_MIRROR_URL",
            "value": "",
            "required": false
        },
        {
            "displayName": "Maven Additional Arguments",
            "description": "Maven additional arguments to use for S2I builds",
            "name": "MAVEN_ARGS_APPEND",
            "value": "-Dcom.redhat.xpaas.repo.jbossorg -Dcom.redhat.xpaas.repo.redhatga",
            "required": false
        },
        {
            "description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied.",
            "name": "ARTIFACT_DIR",
            "value": "",
            "required": false
        },
        {
            "description": "Container memory limit",
            "name": "MEMORY_LIMIT",
            "value": "1Gi",
            "required": false
        }
    ],
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's https port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "publishNotReadyAddresses": true,
                "clusterIP": "None",
                "ports": [
                    {
                        "name": "ping",
                        "port": 8888
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-ping",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true",
                    "description": "The JGroups ping port for clustering."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-https",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's https service."
                }
            },
            "spec": {
                "to": {
                    "name": "${APPLICATION_NAME}"
                },
                "tls": {
                    "insecureEdgeTerminationPolicy": "Redirect",
                    "termination": "edge"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}-build-artifacts",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}-build-artifacts",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                    },
                    "contextDir": "${CONTEXT_DIR}",
                    "images": [
                        {
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "${EXTENSIONS_IMAGE_NAMESPACE}",
                                "name": "${EXTENSIONS_IMAGE}"
                            },
                            "paths": [
                                {
                                    "destinationDir": "./${CONTEXT_DIR}/extensions/extras",
                                    "sourcePath": "${EXTENSIONS_INSTALL_DIR}/."
                                }
                            ]
                        }
                    ]
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "env": [
                            {
                                "name": "MAVEN_MIRROR_URL",
                                "value": "${MAVEN_MIRROR_URL}"
                            },
                            {
                                "name": "MAVEN_ARGS_APPEND",
                                "value": "${MAVEN_ARGS_APPEND}"
                            },
                            {
                                "name": "GALLEON_PROVISION_LAYERS",
                                "value": "${GALLEON_PROVISION_LAYERS}"
                            },
                            {
                                "name": "GALLEON_PROVISION_DEFAULT_FAT_SERVER",
                                "value": "true"
                            },
                            {
                                "name": "CUSTOM_INSTALL_DIRECTORIES",
                                "value": "extensions/*"
                            },
                            {
                                "name": "ARTIFACT_DIR",
                                "value": "${ARTIFACT_DIR}"
                            }
                        ],
                        "forcePull": true,
                        "incremental": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "name": "${EAP_IMAGE_NAME}"
                        }
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}-build-artifacts:latest"
                    }
                },
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "${EXTENSIONS_IMAGE_NAMESPACE}",
                                "name": "${EXTENSIONS_IMAGE}"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "BuildConfig",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "source": {
                    "dockerfile": "FROM ${EAP_RUNTIME_IMAGE_NAME}\nCOPY /server $JBOSS_HOME\nUSER root\nRUN chown -R jboss:root $JBOSS_HOME && chmod -R ug+rwX $JBOSS_HOME\nUSER jboss\nCMD $JBOSS_HOME/bin/openshift-launch.sh",
                    "images": [
                        {
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APPLICATION_NAME}-build-artifacts:latest"
                            },
                            "paths": [
                                {
                                    "sourcePath": "/s2i-output/server/",
                                    "destinationDir": "."
                                }
                            ]
                        }
                    ]
                },
                "strategy": {
                    "dockerStrategy": {
                        "imageOptimizationPolicy": "SkipLayers",
                        "from": {
                            "kind": "ImageStreamTag",
                            "name": "${EAP_RUNTIME_IMAGE_NAME}",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}"
                        }
                    },
                    "type": "Docker"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChange": {
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APPLICATION_NAME}-build-artifacts:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APPLICATION_NAME}:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 75,
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "resources": {
                                    "limits": {
                                        "memory": "${MEMORY_LIMIT}"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "configuration",
                                        "mountPath": "/etc/eap-environment",
                                        "readOnly": true
                                    },
                                    {
                                        "name": "eap-jgroups-keystore-volume",
                                        "mountPath": "/etc/jgroups-encrypt-secret-volume",
                                        "readOnly": true
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/livenessProbe.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 60
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/readinessProbe.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 10
                                },
                                "ports": [
                                    {
                                        "name": "jolokia",
                                        "containerPort": 8778,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "JGROUPS_PING_PROTOCOL",
                                        "value": "dns.DNS_PING"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_NAME",
                                        "value": "${APPLICATION_NAME}-ping"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_PORT",
                                        "value": "8888"
                                    },
                                    {
                                        "name": "ENV_FILES",
                                        "value": "/etc/eap-environment/*"
                                    },
                                    {
                                        "name": "MQ_CLUSTER_PASSWORD",
                                        "value": "${MQ_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "MQ_QUEUES",
                                        "value": "${MQ_QUEUES}"
                                    },
                                    {
                                        "name": "MQ_TOPICS",
                                        "value": "${MQ_TOPICS}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_SECRET",
                                        "value": "${JGROUPS_ENCRYPT_SECRET}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_KEYSTORE_DIR",
                                        "value": "/etc/jgroups-encrypt-secret-volume"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_KEYSTORE",
                                        "value": "${JGROUPS_ENCRYPT_KEYSTORE}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_NAME",
                                        "value": "${JGROUPS_ENCRYPT_NAME}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_PASSWORD",
                                        "value": "${JGROUPS_ENCRYPT_PASSWORD}"
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "AUTO_DEPLOY_EXPLODED",
                                        "value": "${AUTO_DEPLOY_EXPLODED}"
                                    },
                                    {
                                        "name": "ENABLE_GENERATE_DEFAULT_DATASOURCE",
                                        "value": "${ENABLE_GENERATE_DEFAULT_DATASOURCE}"
                                    }
                                ]
                            }
                        ],
                        "volumes": [
                            {
                                "name": "configuration",
                                "secret": {
                                    "secretName": "${CONFIGURATION_NAME}"
                                }
                            },
                            {
                                "name": "eap-jgroups-keystore-volume",
                                "secret": {
                                    "secretName": "${JGROUPS_ENCRYPT_SECRET}"
                                }
                            }
                        ]
                    }
                }
            }
        }
    ]
}
